## IMPORT THE X_TEST.TXT FILE
install.packages("stringr")
library(stringr)
install.packages("miscTools")
library(miscTools)

### Test
con <<- file("X_test.txt", "r")
test <<- readLines(con)
close(con)


test_mat <<- matrix(NA, nrow=2947, ncol=561, byrow=T)

for (i in 1:2947 ){
s <<- str_replace_all(str_trim(test[[i]]),"  ", " ")
s
ssplit <<- strsplit(s," ", fixed=TRUE)
	for (j in 1:561){
		s1 <<- ssplit[[1]][j]
		test_mat[i,j] <<- rbind(s1)
	}

}

test_df <<- as.data.frame(test_mat, stringAsFactors=FALSE)

## IMPORT THE X_TEST.TXT FILE
#### Train
con <<- file("X_train.txt", "r")
train <<- readLines(con)
close(con)


train_mat <<- matrix(NA, nrow=7352, ncol=561, byrow=T)

for (i in 1:7352 ){
s <<- str_replace_all(str_trim(train[[i]]),"  ", " ")
s
ssplit <<- strsplit(s," ", fixed=TRUE)
	for (j in 1:561){
		s1 <<- ssplit[[1]][j]
		train_mat[i,j] <<- rbind(s1)
	}

}

train_df <<- as.data.frame(train_mat, stringAsFactors=FALSE)

## MERGE AND LABEL DATAFRAMES

human_activity_recog_df <<- merge(test_df, train_df,all=TRUE)


## Apply Column Labels
###### features.txt file

con <<- file("features.txt", "r")
features <<- readLines(con)
close(con)

colnames(human_activity_recog_df) <- features

## EXTRACT MEAN AND STANDARD DEVIATION

##Mean
mean_mat <<- matrix(NA, nrow=1, ncol=561, byrow=T)

for (i in 1:1 ){
		for (j in 1:561){
			numb <<- c()
			for (n in 1:10299)
				numb <<- append(numb,human_activity_recog_df[[n,j]])
			mean_mat[i,j] <<- mean(numb)
		}
}

human_activity_recog_mean_df <<- as.data.frame(mean_mat, stringAsFactors=FALSE)


##Standard Deviation
sd_mat <<- matrix(NA, nrow=1, ncol=561, byrow=T)

for (i in 1:1 ){
		for (j in 1:561){
			numb <<- c()
			for (n in 1:10299)
				numb <<- append(numb,human_activity_recog_df[[n,j]])
			sd_mat[i,j] <<- sd(numb)
		}
}

human_activity_recog_sd_df <<- as.data.frame(sd_mat, stringAsFactors=FALSE)

## EXTRACT AVERAGES

## AVERAGES FOR FEATURES
avg_mat <<- matrix(NA, nrow=1, ncol=561, byrow=T)

for (i in 1:1 ){
		for (j in 1:561){
			numb <<- c()
			for (n in 1:10299)
				numb <<- append(numb,human_activity_recog_df[[n,j]])
			avg_mat[i,j] <<- mean(numb)
		}
}

human_activity_recog_avg_df <<- as.data.frame(avg_mat, stringAsFactors=FALSE)

